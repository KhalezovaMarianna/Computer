-- MySQL Script generated by MySQL Workbench
-- Thu Apr 28 19:08:44 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema STO
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema STO
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `STO` DEFAULT CHARACTER SET utf8 ;
USE `STO` ;

-- -----------------------------------------------------
-- Table `STO`.`Salary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Salary` (
  `IDSalary` INT NOT NULL,
  `Employeer` VARCHAR(45) NULL,
  `Salary` DOUBLE NULL,
  PRIMARY KEY (`IDSalary`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Employeer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Employeer` (
  `IDEmployeer` INT NOT NULL,
  `Employeer` VARCHAR(45) NULL,
  `Salary_IDSalary` INT NOT NULL,
  PRIMARY KEY (`IDEmployeer`),
  INDEX `fk_Employeer_Salary1_idx` (`Salary_IDSalary` ASC) VISIBLE,
  CONSTRAINT `fk_Employeer_Salary1`
    FOREIGN KEY (`Salary_IDSalary`)
    REFERENCES `STO`.`Salary` (`IDSalary`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Masters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Masters` (
  `IDMaster` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `FirstName` VARCHAR(45) NULL,
  `TelefonNumber` VARCHAR(45) NULL,
  `Employeer_IDEmployeer` INT NOT NULL,
  PRIMARY KEY (`IDMaster`),
  INDEX `fk_Masters_Employeer1_idx` (`Employeer_IDEmployeer` ASC) VISIBLE,
  CONSTRAINT `fk_Masters_Employeer1`
    FOREIGN KEY (`Employeer_IDEmployeer`)
    REFERENCES `STO`.`Employeer` (`IDEmployeer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Auto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Auto` (
  `State Number` INT NOT NULL,
  `Model` VARCHAR(45) NULL,
  PRIMARY KEY (`State Number`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Clients` (
  `IDClients` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `FirstName` VARCHAR(45) NULL,
  `TelefonNumber` VARCHAR(45) NULL,
  `Auto_State Number` INT NOT NULL,
  PRIMARY KEY (`IDClients`),
  INDEX `fk_Clients_Auto_idx` (`Auto_State Number` ASC) VISIBLE,
  CONSTRAINT `fk_Clients_Auto`
    FOREIGN KEY (`Auto_State Number`)
    REFERENCES `STO`.`Auto` (`State Number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Service` (
  `IDProblem` INT NOT NULL,
  `Problem` VARCHAR(45) NULL,
  `Times to work` VARCHAR(45) NULL,
  PRIMARY KEY (`IDProblem`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Suppllier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Suppllier` (
  `IDSuppllier` INT NOT NULL,
  `Suppllier` VARCHAR(45) NULL,
  `Country` VARCHAR(45) NULL,
  PRIMARY KEY (`IDSuppllier`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`ActiveTask`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`ActiveTask` (
  `IDTask` INT NOT NULL,
  `Service_IDProblem` INT NOT NULL,
  `Clients_IDClients` INT NOT NULL,
  PRIMARY KEY (`IDTask`),
  INDEX `fk_ActiveTask_Service1_idx` (`Service_IDProblem` ASC) VISIBLE,
  INDEX `fk_ActiveTask_Clients1_idx` (`Clients_IDClients` ASC) VISIBLE,
  CONSTRAINT `fk_ActiveTask_Service1`
    FOREIGN KEY (`Service_IDProblem`)
    REFERENCES `STO`.`Service` (`IDProblem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActiveTask_Clients1`
    FOREIGN KEY (`Clients_IDClients`)
    REFERENCES `STO`.`Clients` (`IDClients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Diagnost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Diagnost` (
  `IDDiagnost` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `FirstName` VARCHAR(45) NULL,
  `TelefonNumber` VARCHAR(45) NULL,
  `Employeer_IDEmployeer` INT NOT NULL,
  PRIMARY KEY (`IDDiagnost`),
  INDEX `fk_Diagnost_Employeer1_idx` (`Employeer_IDEmployeer` ASC) VISIBLE,
  CONSTRAINT `fk_Diagnost_Employeer1`
    FOREIGN KEY (`Employeer_IDEmployeer`)
    REFERENCES `STO`.`Employeer` (`IDEmployeer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Garage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Garage` (
  `IDGarage` VARCHAR(40) NOT NULL,
  `Adress` VARCHAR(45) NULL,
  PRIMARY KEY (`IDGarage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Admins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Admins` (
  `IDAdmins` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `FirstName` VARCHAR(45) NULL,
  `TelefonNumber` VARCHAR(45) NULL,
  `Employeer_IDEmployeer` INT NOT NULL,
  PRIMARY KEY (`IDAdmins`),
  INDEX `fk_Admins_Employeer1_idx` (`Employeer_IDEmployeer` ASC) VISIBLE,
  CONSTRAINT `fk_Admins_Employeer1`
    FOREIGN KEY (`Employeer_IDEmployeer`)
    REFERENCES `STO`.`Employeer` (`IDEmployeer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Sale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Sale` (
  `IDSale` INT NOT NULL,
  `Service` VARCHAR(45) NULL,
  `Sale` VARCHAR(45) NULL,
  `Conditions` VARCHAR(45) NULL,
  `Service_IDProblem` INT NOT NULL,
  PRIMARY KEY (`IDSale`),
  INDEX `fk_Sale_Service1_idx` (`Service_IDProblem` ASC) VISIBLE,
  CONSTRAINT `fk_Sale_Service1`
    FOREIGN KEY (`Service_IDProblem`)
    REFERENCES `STO`.`Service` (`IDProblem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Time to work`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Time to work` (
  `IDTime` INT NOT NULL,
  `Time to work` VARCHAR(45) NULL,
  `Service_IDProblem` INT NOT NULL,
  PRIMARY KEY (`IDTime`),
  INDEX `fk_Time to work_Service1_idx` (`Service_IDProblem` ASC) VISIBLE,
  CONSTRAINT `fk_Time to work_Service1`
    FOREIGN KEY (`Service_IDProblem`)
    REFERENCES `STO`.`Service` (`IDProblem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Cost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Cost` (
  `IDCost` INT NOT NULL,
  `Problems` VARCHAR(45) NULL,
  `Cost` DOUBLE NULL,
  `Time to work_IDTime` INT NOT NULL,
  PRIMARY KEY (`IDCost`),
  INDEX `fk_Cost_Time to work1_idx` (`Time to work_IDTime` ASC) VISIBLE,
  CONSTRAINT `fk_Cost_Time to work1`
    FOREIGN KEY (`Time to work_IDTime`)
    REFERENCES `STO`.`Time to work` (`IDTime`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Materials` (
  `IDMaterials` INT NOT NULL,
  `Supplier` VARCHAR(45) NULL,
  `Materials` VARCHAR(45) NULL,
  PRIMARY KEY (`IDMaterials`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `STO`.`Suppllier_has_Materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `STO`.`Suppllier_has_Materials` (
  `Suppllier_IDSuppllier` INT NOT NULL,
  `Materials_IDMaterials` INT NOT NULL,
  PRIMARY KEY (`Suppllier_IDSuppllier`, `Materials_IDMaterials`),
  INDEX `fk_Suppllier_has_Materials_Materials1_idx` (`Materials_IDMaterials` ASC) VISIBLE,
  INDEX `fk_Suppllier_has_Materials_Suppllier1_idx` (`Suppllier_IDSuppllier` ASC) VISIBLE,
  CONSTRAINT `fk_Suppllier_has_Materials_Suppllier1`
    FOREIGN KEY (`Suppllier_IDSuppllier`)
    REFERENCES `STO`.`Suppllier` (`IDSuppllier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Suppllier_has_Materials_Materials1`
    FOREIGN KEY (`Materials_IDMaterials`)
    REFERENCES `STO`.`Materials` (`IDMaterials`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
